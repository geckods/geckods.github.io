{"version":3,"file":"component---src-pages-about-js-6e12b0a7039a1447f46a.js","mappings":"uJA8BA,IA3BeA,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAUH,EAC3C,MACMI,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEAG,EAAAA,cAAA,MAAIC,UAAU,gBACZD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KAAKR,IAKhBK,EAAAA,cAACE,EAAAA,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCR,GAMLK,EAAAA,cAAA,OAAKC,UAAU,iBAAiB,oBAAmBJ,GACjDG,EAAAA,cAAA,UAAQC,UAAU,iBAAiBF,GACnCC,EAAAA,cAAA,YAAOJ,GACH,C,+CCuBV,IAvCYH,IAAuC,IAADW,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAEZ,EAAK,SAAEC,GAAUH,EAC3C,MAAM,KAAEe,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApBR,EAAGI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBT,MAExC,OACEK,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQY,EAAkBjB,EAAK,MAAMiB,EAAiBjB,GACtDK,EAAAA,cAAA,QAAMa,KAAK,cAAcC,QAASJ,IAClCV,EAAAA,cAAA,QAAMe,SAAS,WAAWD,QAASnB,IACnCK,EAAAA,cAAA,QAAMe,SAAS,iBAAiBD,QAASJ,IACzCV,EAAAA,cAAA,QAAMe,SAAS,UAAUD,QAAQ,YACjCd,EAAAA,cAAA,QAAMa,KAAK,eAAeC,QAAQ,YAClCd,EAAAA,cAAA,QACEa,KAAK,kBACLC,SAA0B,QAAjBT,EAAAG,EAAKG,oBAAY,IAAAN,GAAQ,QAARC,EAAjBD,EAAmBW,cAAM,IAAAV,OAAR,EAAjBA,EAA2BW,UAAO,KAE7CjB,EAAAA,cAAA,QAAMa,KAAK,gBAAgBC,QAASnB,IACpCK,EAAAA,cAAA,QAAMa,KAAK,sBAAsBC,QAASJ,IACzCd,EACA,C,gECfP,UAzBkBH,IAAyB,IAADyB,EAAA,IAAvB,KAAEC,EAAI,SAAEzB,GAAUD,EACnC,MAAM2B,GAAkC,QAAtBF,EAAAC,EAAKX,KAAKG,oBAAY,IAAAO,OAAA,EAAtBA,EAAwBvB,QAAK,QACzC0B,EAAQF,EAAKG,eAEnB,OACEtB,EAAAA,cAACuB,EAAAA,EAAM,CAAC7B,SAAUA,EAAUC,MAAOyB,GACjCpB,EAAAA,cAACwB,EAAAA,EAAG,CAAC7B,MAAM,UACXK,EAAAA,cAAA,WACEC,UAAU,YACVwB,WAAS,EACTC,SAAS,6BAET1B,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAI2B,SAAS,YAAYN,EAAMO,YAAYjC,OAC3CK,EAAAA,cAAA,SAAIqB,EAAMO,YAAYC,OAExB7B,EAAAA,cAAA,WACE8B,wBAAyB,CAAEC,OAAQV,EAAMW,MACzCL,SAAS,iBAGN,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/about.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\n\nconst AboutPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const about = data.markdownRemark\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"About\" />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{about.frontmatter.title}</h1>\n          <p>{about.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: about.html }}\n          itemProp=\"articleBody\"\n        />\n      </article>\n    </Layout>\n  )\n}\n\nexport default AboutPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fileAbsolutePath: { regex: \"/content/about.md/\" }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY MMM DD\")\n      }\n    }\n  }\n`"],"names":["_ref","location","title","children","isRootPath","pathname","header","React","className","Link","to","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","_data$site$siteMetada","data","siteTitle","about","markdownRemark","Layout","Seo","itemScope","itemType","itemProp","frontmatter","date","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}