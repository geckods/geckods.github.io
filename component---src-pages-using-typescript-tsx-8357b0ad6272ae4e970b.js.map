{"version":3,"file":"component---src-pages-using-typescript-tsx-8357b0ad6272ae4e970b.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/AuthNavBar.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/services/auth.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from \"react\"\nimport { Link, navigate } from \"gatsby\"\nimport { getUser, isLoggedIn, logout } from \"../services/auth\"\n\nexport default function NavBar() {\n  let greetingMessage = \"\"\n  if (isLoggedIn()) {\n    greetingMessage = `Hello ${getUser().name}`\n  } else {\n    greetingMessage = \"You are not logged in\"\n  }\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flex: \"1\",\n        justifyContent: \"space-between\",\n        borderBottom: \"1px solid #d1c1e0\",\n      }}\n    >\n      <span>{greetingMessage}</span>\n      <nav>\n        <Link to=\"/\">Home</Link>\n        {` `}\n        {isLoggedIn() ? (\n          <a\n            href=\"/\"\n            onClick={event => {\n              event.preventDefault()\n              logout(() => navigate(`/app/login`))\n            }}\n          >\n            Logout\n          </a>\n        ) : null}\n      </nav>\n    </div>\n  )\n}","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport AuthNavBar from \"./AuthNavBar\"\n\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <>\n      <AuthNavBar />\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <header className=\"global-header\">{header}</header>\n        <main>{children}</main>\n      </div>\n    </>\n )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","export const isBrowser = () => typeof window !== \"undefined\"\n\nexport const getUser = () =>\n  isBrowser() && window.localStorage.getItem(\"gatsbyUser\")\n    ? JSON.parse(window.localStorage.getItem(\"gatsbyUser\"))\n    : {}\n\nconst setUser = user =>\n  window.localStorage.setItem(\"gatsbyUser\", JSON.stringify(user))\n\nexport const handleLogin = ({ username, password }) => {\n  if (username === `john` && password === `pass`) {\n    return setUser({\n      username: `john`,\n      name: `Johnny`,\n      email: `johnny@example.org`,\n    })\n  }\n\n  return false\n}\n\nexport const isLoggedIn = () => {\n  const user = getUser()\n\n  return !!user.username\n}\n\nexport const logout = callback => {\n  setUser({})\n  callback()\n}"],"names":["Head","React","Seo","title","_ref","data","path","location","Layout","site","buildTime","href","Link","to","NavBar","greetingMessage","isLoggedIn","getUser","name","style","display","flex","justifyContent","borderBottom","onClick","event","preventDefault","logout","navigate","children","isRootPath","pathname","header","className","AuthNavBar","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","content","property","social","twitter","window","localStorage","getItem","JSON","parse","setUser","user","setItem","stringify","handleLogin","username","password","email","callback"],"sourceRoot":""}